(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("rangeSlider", [], factory);
	else if(typeof exports === 'object')
		exports["rangeSlider"] = factory();
	else
		root["rangeSlider"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/**
 * Delays a function for the given number of milliseconds, and then calls
 * it with the arguments supplied.
 *
 * @param  {Function} fn   function
 * @param  {Number}   wait delay
 * @param  {Number}   args arguments
 * @return {Function}
 */
var delay = exports.delay = function delay(fn, wait) {
  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  return setTimeout(function () {
    return fn.apply(null, args);
  }, wait);
};

/**
 * Returns a debounced function that will make sure the given
 * function is not triggered too much.
 *
 * @param  {Function} fn Function to debounce.
 * @param  {Number}   debounceDuration OPTIONAL. The amount of time in milliseconds for which we will debounce the
 *         function. (defaults to 100ms)
 * @return {Function}
 */
var debounce = exports.debounce = function debounce(fn) {
  var debounceDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
  return function () {
    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    if (!fn.debouncing) {
      fn.lastReturnVal = fn.apply(window, args);
      fn.debouncing = true;
    }
    clearTimeout(fn.debounceTimeout);
    fn.debounceTimeout = setTimeout(function () {
      fn.debouncing = false;
    }, debounceDuration);
    return fn.lastReturnVal;
  };
};

var isString = exports.isString = function isString(obj) {
  return obj === '' + obj;
};

var isArray = exports.isArray = function isArray(obj) {
  return Object.prototype.toString.call(obj) === '[object Array]';
};

var isNumberLike = exports.isNumberLike = function isNumberLike(obj) {
  return obj !== null && obj !== undefined && (isString(obj) && isFinite(parseFloat(obj)) || isFinite(obj));
};

var getFirsNumberLike = exports.getFirsNumberLike = function getFirsNumberLike() {
  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }

  if (!args.length) {
    return null;
  }

  for (var i = 0, len = args.length; i < len; i++) {
    if (isNumberLike(args[i])) {
      return args[i];
    }
  }

  return null;
};

var isObject = exports.isObject = function isObject(obj) {
  return Object.prototype.toString.call(obj) === '[object Object]';
};

var simpleExtend = exports.simpleExtend = function simpleExtend(defaultOpt, options) {
  var opt = {};

  for (var key in defaultOpt) {
    opt[key] = defaultOpt[key];
  }
  for (var _key4 in options) {
    opt[_key4] = options[_key4];
  }

  return opt;
};

var between = exports.between = function between(pos, min, max) {
  if (pos < min) {
    return min;
  }
  if (pos > max) {
    return max;
  }
  return pos;
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dom = __webpack_require__(2);

var dom = _interopRequireWildcard(_dom);

var _functions = __webpack_require__(0);

var func = _interopRequireWildcard(_functions);

__webpack_require__(3);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var newLineAndTabRegexp = new RegExp('/[\\n\\t]/', 'g');
var MAX_SET_BY_DEFAULT = 100;
var HANDLE_RESIZE_DELAY = 300;
var HANDLE_RESIZE_DEBOUNCE = 50;

var pluginName = 'rangeSlider';
var pluginIdentifier = 0;
var inputrange = dom.supportsRange();
var defaults = {
  polyfill: true,
  rangeClass: 'rangeSlider',
  disabledClass: 'rangeSlider--disabled',
  fillClass: 'rangeSlider__fill',
  bufferClass: 'rangeSlider__buffer',
  handleClass: 'rangeSlider__handle',
  startEvent: ['mousedown', 'touchstart', 'pointerdown'],
  moveEvent: ['mousemove', 'touchmove', 'pointermove'],
  endEvent: ['mouseup', 'touchend', 'pointerup'],
  min: null,
  max: null,
  step: null,
  value: null,
  buffer: null,
  stick: null,
  borderRadius: 10,
  vertical: false
};

/**
 * Plugin
 * @param {HTMLElement} element
 * @param {this} options
 */

var RangeSlider = function () {
  function RangeSlider(element, options) {
    _classCallCheck(this, RangeSlider);

    var minSetByDefault = void 0;
    var maxSetByDefault = void 0;
    var stepSetByDefault = void 0;
    var stickAttribute = void 0;
    var stickValues = void 0;

    this.element = element;
    this.options = func.simpleExtend(defaults, options);
    this.polyfill = this.options.polyfill;
    this.vertical = this.options.vertical;
    this.onInit = this.options.onInit;
    this.onSlide = this.options.onSlide;
    this.onSlideStart = this.options.onSlideStart;
    this.onSlideEnd = this.options.onSlideEnd;
    this.onSlideEventsCount = -1;
    this.isInteractsNow = false;
    this.needTriggerEvents = false;

    // Plugin should only be used as a polyfill
    if (!this.polyfill) {
      // Input range support?
      if (inputrange) {
        return;
      }
    }

    this.options.buffer = this.options.buffer || parseFloat(this.element.getAttribute('data-buffer'));

    this.identifier = 'js-' + pluginName + '-' + pluginIdentifier++;

    this.min = func.getFirsNumberLike(this.options.min, parseFloat(this.element.getAttribute('min')), minSetByDefault = 0);

    this.max = func.getFirsNumberLike(this.options.max, parseFloat(this.element.getAttribute('max')), maxSetByDefault = MAX_SET_BY_DEFAULT);

    this.value = func.getFirsNumberLike(this.options.value, this.element.value, parseFloat(this.element.value || this.min + (this.max - this.min) / 2));

    this.step = func.getFirsNumberLike(this.options.step, parseFloat(this.element.getAttribute('step')) || (stepSetByDefault = 1));

    this.percent = null;

    if (func.isArray(this.options.stick) && this.options.stick.length >= 1) {
      this.stick = this.options.stick;
    } else if (stickAttribute = this.element.getAttribute('stick')) {
      stickValues = stickAttribute.split(' ');
      if (stickValues.length >= 1) {
        this.stick = stickValues.map(parseFloat);
      }
    }
    if (this.stick && this.stick.length === 1) {
      this.stick.push(this.step * 1.5);
    }
    this._updatePercentFromValue();

    this.toFixed = this._toFixed(this.step);

    var directionClass = void 0;

    this.container = document.createElement('div');
    dom.addClass(this.container, this.options.fillClass);

    directionClass = this.vertical ? this.options.fillClass + '__vertical' : this.options.fillClass + '__horizontal';
    dom.addClass(this.container, directionClass);

    this.handle = document.createElement('div');
    dom.addClass(this.handle, this.options.handleClass);

    directionClass = this.vertical ? this.options.handleClass + '__vertical' : this.options.handleClass + '__horizontal';
    dom.addClass(this.handle, directionClass);

    this.range = document.createElement('div');
    dom.addClass(this.range, this.options.rangeClass);
    this.range.id = this.identifier;
    this.range.appendChild(this.handle);
    this.range.appendChild(this.container);

    directionClass = this.vertical ? this.options.rangeClass + '__vertical' : this.options.rangeClass + '__horizontal';
    dom.addClass(this.range, directionClass);

    if (this.options.bufferClass) {
      this.buffer = document.createElement('div');
      dom.addClass(this.buffer, this.options.bufferClass);
      this.range.appendChild(this.buffer);

      directionClass = this.vertical ? this.options.bufferClass + '__vertical' : this.options.bufferClass + '__horizontal';
      dom.addClass(this.buffer, directionClass);
    }

    if (func.isNumberLike(this.options.value)) {
      this._setValue(this.options.value, true);
      this.element.value = this.options.value;
    }

    if (func.isNumberLike(this.options.buffer)) {
      this.element.setAttribute('data-buffer', this.options.buffer);
    }

    if (func.isNumberLike(this.options.min) || minSetByDefault) {
      this.element.setAttribute('min', '' + this.min);
    }

    if (func.isNumberLike(this.options.max) || maxSetByDefault) {
      this.element.setAttribute('max', '' + this.max);
    }

    if (func.isNumberLike(this.options.step) || stepSetByDefault) {
      this.element.setAttribute('step', '' + this.step);
    }

    dom.insertAfter(this.element, this.range);

    // hide the input visually
    dom.setCss(this.element, {
      'position': 'absolute',
      'width': '1px',
      'height': '1px',
      'overflow': 'hidden',
      'opacity': '0'
    });

    // Store context
    this._handleDown = this._handleDown.bind(this);
    this._handleMove = this._handleMove.bind(this);
    this._handleEnd = this._handleEnd.bind(this);
    this._startEventListener = this._startEventListener.bind(this);
    this._changeEventListener = this._changeEventListener.bind(this);
    this._handleResize = this._handleResize.bind(this);

    this._init();

    // Attach Events
    window.addEventListener('resize', this._handleResize, false);

    dom.addEventListeners(document, this.options.startEvent, this._startEventListener);

    // Listen to programmatic value changes
    this.element.addEventListener('change', this._changeEventListener, false);
  }

  /* public methods */

  /**
   * @param {Object} obj like {min : Number, max : Number, value : Number, step : Number, buffer : [String|Number]}
   * @param {Boolean} triggerEvents
   * @returns {RangeSlider}
   */


  _createClass(RangeSlider, [{
    key: 'update',
    value: function update(obj, triggerEvents) {
      if (triggerEvents) {
        this.needTriggerEvents = true;
      }
      if (func.isObject(obj)) {
        if (func.isNumberLike(obj.min)) {
          this.element.setAttribute('min', '' + obj.min);
          this.min = obj.min;
        }

        if (func.isNumberLike(obj.max)) {
          this.element.setAttribute('max', '' + obj.max);
          this.max = obj.max;
        }

        if (func.isNumberLike(obj.step)) {
          this.element.setAttribute('step', '' + obj.step);
          this.step = obj.step;
          this.toFixed = this._toFixed(obj.step);
        }

        if (func.isNumberLike(obj.buffer)) {
          this._setBufferPosition(obj.buffer);
        }

        if (func.isNumberLike(obj.value)) {
          this._setValue(obj.value);
        }
      }
      this._update();
      this.onSlideEventsCount = 0;
      this.needTriggerEvents = false;
      return this;
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      dom.removeAllListenersFromEl(this, document);
      window.removeEventListener('resize', this._handleResize, false);
      this.element.removeEventListener('change', this._changeEventListener, false);

      this.element.style.cssText = '';
      delete this.element[pluginName];

      // Remove the generated markup
      if (this.range) {
        this.range.parentNode.removeChild(this.range);
      }
    }

    /**
     * A lightweight plugin wrapper around the constructor,preventing against multiple instantiations
     * @param {Element} el
     * @param {Object} options
     */

  }, {
    key: '_toFixed',


    /* private methods */

    value: function _toFixed(step) {
      return (step + '').replace('.', '').length - 1;
    }
  }, {
    key: '_init',
    value: function _init() {
      if (this.onInit && typeof this.onInit === 'function') {
        this.onInit();
      }
      this._update();
    }
  }, {
    key: '_updatePercentFromValue',
    value: function _updatePercentFromValue() {
      this.percent = (this.value - this.min) / (this.max - this.min);
    }

    /**
     * This method check if this.identifier exists in ev.target's ancestors
     * @param ev
     * @param data
     */

  }, {
    key: '_startEventListener',
    value: function _startEventListener(ev, data) {
      var _this = this;

      var el = ev.target;
      var isEventOnSlider = false;

      if (ev.which !== 1 && !('touches' in ev)) {
        return;
      }

      dom.forEachAncestors(el, function (el) {
        return isEventOnSlider = el.id === _this.identifier && !dom.hasClass(el, _this.options.disabledClass);
      }, true);

      if (isEventOnSlider) {
        this._handleDown(ev, data);
      }
    }
  }, {
    key: '_changeEventListener',
    value: function _changeEventListener(ev, data) {
      if (data && data.origin === this.identifier) {
        return;
      }

      var value = ev.target.value;
      var pos = this._getPositionFromValue(value);

      this._setPosition(pos);
    }
  }, {
    key: '_update',
    value: function _update() {
      var sizeProperty = this.vertical ? 'offsetHeight' : 'offsetWidth';

      this.handleSize = dom.getDimension(this.handle, sizeProperty);
      this.rangeSize = dom.getDimension(this.range, sizeProperty);
      this.maxHandleX = this.rangeSize - this.handleSize;
      this.grabX = this.handleSize / 2;
      this.position = this._getPositionFromValue(this.value);

      // Consider disabled state
      if (this.element.disabled) {
        dom.addClass(this.range, this.options.disabledClass);
      } else {
        dom.removeClass(this.range, this.options.disabledClass);
      }

      this._setPosition(this.position);
      if (this.options.bufferClass && this.options.buffer) {
        this._setBufferPosition(this.options.buffer);
      }
      this._updatePercentFromValue();
      dom.triggerEvent(this.element, 'change', { origin: this.identifier });
    }
  }, {
    key: '_handleResize',
    value: function _handleResize() {
      var _this2 = this;

      return func.debounce(function () {
        // Simulate resizeEnd event.
        func.delay(function () {
          _this2._update();
        }, HANDLE_RESIZE_DELAY);
      }, HANDLE_RESIZE_DEBOUNCE)();
    }
  }, {
    key: '_handleDown',
    value: function _handleDown(e) {
      this.isInteractsNow = true;
      e.preventDefault();
      dom.addEventListeners(document, this.options.moveEvent, this._handleMove);
      dom.addEventListeners(document, this.options.endEvent, this._handleEnd);

      // If we click on the handle don't set the new position
      if ((' ' + e.target.className + ' ').replace(newLineAndTabRegexp, ' ').indexOf(this.options.handleClass) > -1) {
        return;
      }

      var boundingClientRect = this.range.getBoundingClientRect();

      var posX = this._getRelativePosition(e);
      var rangeX = this.vertical ? boundingClientRect.bottom : boundingClientRect.left;
      var handleX = this._getPositionFromNode(this.handle) - rangeX;
      var position = posX - this.grabX;

      this._setPosition(position);

      if (posX >= handleX && posX < handleX + this.options.borderRadius * 2) {
        this.grabX = posX - handleX;
      }
      this._updatePercentFromValue();
    }
  }, {
    key: '_handleMove',
    value: function _handleMove(e) {
      var posX = this._getRelativePosition(e);

      this.isInteractsNow = true;
      e.preventDefault();
      this._setPosition(posX - this.grabX);
    }
  }, {
    key: '_handleEnd',
    value: function _handleEnd(e) {
      e.preventDefault();
      dom.removeEventListeners(document, this.options.moveEvent, this._handleMove);
      dom.removeEventListeners(document, this.options.endEvent, this._handleEnd);

      // Ok we're done fire the change event
      dom.triggerEvent(this.element, 'change', { origin: this.identifier });

      if (this.isInteractsNow || this.needTriggerEvents) {
        if (this.onSlideEnd && typeof this.onSlideEnd === 'function') {
          this.onSlideEnd(this.value, this.percent, this.position);
        }
      }
      this.onSlideEventsCount = 0;
      this.isInteractsNow = false;
    }
  }, {
    key: '_setPosition',
    value: function _setPosition(pos) {
      var position = void 0;
      var stickRadius = void 0;
      var restFromValue = void 0;
      var stickTo = void 0;

      // Snapping steps
      var value = this._getValueFromPosition(func.between(pos, 0, this.maxHandleX));

      // Stick to stick[0] in radius stick[1]
      if (this.stick) {
        stickTo = this.stick[0];
        stickRadius = this.stick[1] || 0.1;
        restFromValue = value % stickTo;
        if (restFromValue < stickRadius) {
          value = value - restFromValue;
        } else if (Math.abs(stickTo - restFromValue) < stickRadius) {
          value = value - restFromValue + stickTo;
        }
      }
      position = this._getPositionFromValue(value);

      // Update ui
      if (this.vertical) {
        this.container.style.height = position + this.grabX + 'px';
        this.handle.style.transform = 'translateY(-' + position + 'px)';
        this.handle.style['-ms-transform'] = 'translateY(-' + position + 'px)';
      } else {
        this.container.style.width = position + this.grabX + 'px';
        this.handle.style.transform = 'translateX(' + position + 'px)';
        this.handle.style['-ms-transform'] = 'translateX(' + position + 'px)';
      }

      this._setValue(value);

      // Update globals
      this.position = position;
      this.value = value;
      this._updatePercentFromValue();

      if (this.isInteractsNow || this.needTriggerEvents) {
        if (this.onSlideStart && typeof this.onSlideStart === 'function' && this.onSlideEventsCount === 0) {
          this.onSlideStart(this.value, this.percent, this.position);
        }

        if (this.onSlide && typeof this.onSlide === 'function') {
          this.onSlide(this.value, this.percent, this.position);
        }
      }

      this.onSlideEventsCount++;
    }
  }, {
    key: '_setBufferPosition',
    value: function _setBufferPosition(pos) {
      var isPercent = true;

      if (isFinite(pos)) {
        pos = parseFloat(pos);
      } else if (func.isString(pos)) {
        if (pos.indexOf('px') > 0) {
          isPercent = false;
        }
        pos = parseFloat(pos);
      } else {
        console.warn('New position must be XXpx or XX%');
        return;
      }

      if (isNaN(pos)) {
        console.warn('New position is NaN');
        return;
      }
      if (!this.options.bufferClass) {
        console.warn('You disabled buffer, it\'s className is empty');
        return;
      }
      var bufferSize = isPercent ? pos : pos / this.rangeSize * 100;

      if (bufferSize < 0) {
        bufferSize = 0;
      }
      if (bufferSize > 100) {
        bufferSize = 100;
      }
      this.options.buffer = bufferSize;

      var paddingSize = this.options.borderRadius / this.rangeSize * 100;
      var bufferSizeWithPadding = bufferSize - paddingSize;

      if (bufferSizeWithPadding < 0) {
        bufferSizeWithPadding = 0;
      }

      if (this.vertical) {
        this.buffer.style.height = bufferSizeWithPadding + '%';
        this.buffer.style.bottom = paddingSize * 0.5 + '%';
      } else {
        this.buffer.style.width = bufferSizeWithPadding + '%';
        this.buffer.style.left = paddingSize * 0.5 + '%';
      }

      this.element.setAttribute('data-buffer', bufferSize);
    }

    /**
     *
     * @param {Element} node
     * @returns {*} Returns element position relative to the parent
     * @private
     */

  }, {
    key: '_getPositionFromNode',
    value: function _getPositionFromNode(node) {
      var i = this.vertical ? this.maxHandleX : 0;

      while (node !== null) {
        i += this.vertical ? node.offsetTop : node.offsetLeft;
        node = node.offsetParent;
      }
      return i;
    }

    /**
     *
     * @param {(MouseEvent|TouchEvent)}e
     * @returns {number}
     */

  }, {
    key: '_getRelativePosition',
    value: function _getRelativePosition(e) {
      var boundingClientRect = this.range.getBoundingClientRect();

      // Get the offset relative to the viewport
      var rangeSize = this.vertical ? boundingClientRect.bottom : boundingClientRect.left;
      var pageOffset = 0;

      var pagePositionProperty = this.vertical ? 'pageY' : 'pageX';

      if (typeof e[pagePositionProperty] !== 'undefined') {
        pageOffset = e.touches && e.touches.length ? e.touches[0][pagePositionProperty] : e[pagePositionProperty];
      } else if (typeof e.originalEvent !== 'undefined') {
        if (typeof e.originalEvent[pagePositionProperty] !== 'undefined') {
          pageOffset = e.originalEvent[pagePositionProperty];
        } else if (e.originalEvent.touches && e.originalEvent.touches[0] && typeof e.originalEvent.touches[0][pagePositionProperty] !== 'undefined') {
          pageOffset = e.originalEvent.touches[0][pagePositionProperty];
        }
      } else if (e.touches && e.touches[0] && typeof e.touches[0][pagePositionProperty] !== 'undefined') {
        pageOffset = e.touches[0][pagePositionProperty];
      } else if (e.currentPoint && (typeof e.currentPoint.x !== 'undefined' || typeof e.currentPoint.y !== 'undefined')) {
        pageOffset = this.vertical ? e.currentPoint.y : e.currentPoint.x;
      }

      if (this.vertical) {
        pageOffset -= window.pageYOffset;
      }

      return this.vertical ? rangeSize - pageOffset : pageOffset - rangeSize;
    }
  }, {
    key: '_getPositionFromValue',
    value: function _getPositionFromValue(value) {
      var percentage = (value - this.min) / (this.max - this.min);
      var pos = percentage * this.maxHandleX;

      return isNaN(pos) ? 0 : pos;
    }
  }, {
    key: '_getValueFromPosition',
    value: function _getValueFromPosition(pos) {
      var percentage = pos / (this.maxHandleX || 1);
      var value = this.step * Math.round(percentage * (this.max - this.min) / this.step) + this.min;

      return Number(value.toFixed(this.toFixed));
    }
  }, {
    key: '_setValue',
    value: function _setValue(value, force) {
      if (value === this.value && !force) {
        return;
      }

      // Set the new value and fire the `input` event
      this.element.value = value;
      this.value = value;
      dom.triggerEvent(this.element, 'input', { origin: this.identifier });
    }
  }], [{
    key: 'create',
    value: function create(el, options) {
      var createInstance = function createInstance(el) {
        var data = el[pluginName];

        // Create a new instance.
        if (!data) {
          data = new RangeSlider(el, options);
          el[pluginName] = data;
        }
      };

      if (el.length) {
        Array.prototype.slice.call(el).forEach(function (el) {
          createInstance(el);
        });
      } else {
        createInstance(el);
      }
    }
  }]);

  return RangeSlider;
}();

exports.default = RangeSlider;
module.exports = exports['default'];

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.supportsRange = exports.removeAllListenersFromEl = exports.removeEventListeners = exports.addEventListeners = exports.insertAfter = exports.triggerEvent = exports.forEachAncestors = exports.removeClass = exports.addClass = exports.hasClass = exports.setCss = exports.getDimension = exports.getHiddenParentNodes = exports.isHidden = exports.detectIE = undefined;

var _functions = __webpack_require__(0);

var func = _interopRequireWildcard(_functions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var EVENT_LISTENER_LIST = 'eventListenerList';

var detectIE = exports.detectIE = function detectIE() {
  var ua = window.navigator.userAgent;
  var msie = ua.indexOf('MSIE ');

  if (msie > 0) {
    return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
  }

  var trident = ua.indexOf('Trident/');

  if (trident > 0) {
    var rv = ua.indexOf('rv:');

    return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
  }

  var edge = ua.indexOf('Edge/');

  if (edge > 0) {
    return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
  }

  return false;
};

var ieVersion = detectIE();
var eventCaptureParams = window.PointerEvent && !ieVersion ? { passive: false } : false;

/**
 * Check if a `element` is visible in the DOM
 *
 * @param  {Element}  element
 * @return {Boolean}
 */
var isHidden = exports.isHidden = function isHidden(element) {
  return element.offsetWidth === 0 || element.offsetHeight === 0 || element.open === false;
};

/**
 * Get hidden parentNodes of an `element`
 *
 * @param {Element} element
 * @return {Element[]}
 */
var getHiddenParentNodes = exports.getHiddenParentNodes = function getHiddenParentNodes(element) {
  var parents = [];
  var node = element.parentNode;

  while (isHidden(node)) {
    parents.push(node);
    node = node.parentNode;
  }
  return parents;
};

/**
 * Returns dimensions for an element even if it is not visible in the DOM.
 *
 * @param  {Element} element
 * @param  {string}  key     (e.g. offsetWidth …)
 * @return {Number}
 */
var getDimension = exports.getDimension = function getDimension(element, key) {
  var hiddenParentNodes = getHiddenParentNodes(element);
  var hiddenParentNodesLength = hiddenParentNodes.length;
  var displayProperty = [];
  var dimension = element[key];

  // Used for native `<details>` elements
  var toggleOpenProperty = function toggleOpenProperty(element) {
    if (typeof element.open !== 'undefined') {
      element.open = !element.open;
    }
  };

  if (hiddenParentNodesLength) {
    for (var i = 0; i < hiddenParentNodesLength; i++) {
      // Cache the display property to restore it later.
      displayProperty[i] = hiddenParentNodes[i].style.display;

      hiddenParentNodes[i].style.display = 'block';
      hiddenParentNodes[i].style.height = '0';
      hiddenParentNodes[i].style.overflow = 'hidden';
      hiddenParentNodes[i].style.visibility = 'hidden';
      toggleOpenProperty(hiddenParentNodes[i]);
    }

    dimension = element[key];

    for (var j = 0; j < hiddenParentNodesLength; j++) {
      toggleOpenProperty(hiddenParentNodes[j]);
      hiddenParentNodes[j].style.display = displayProperty[j];
      hiddenParentNodes[j].style.height = '';
      hiddenParentNodes[j].style.overflow = '';
      hiddenParentNodes[j].style.visibility = '';
    }
  }
  return dimension;
};

/**
 *
 * @param {HTMLElement} el
 * @param {Object} cssObj
 * @returns {*}
 */
var setCss = exports.setCss = function setCss(el, cssObj) {
  for (var key in cssObj) {
    el.style[key] = cssObj[key];
  }
  return el.style;
};

/**
 *
 * @param {HTMLElement} elem
 * @param {string} className
 */
var hasClass = exports.hasClass = function hasClass(elem, className) {
  return new RegExp(' ' + className + ' ').test(' ' + elem.className + ' ');
};

/**
 *
 * @param {HTMLElement} elem
 * @param {string} className
 */
var addClass = exports.addClass = function addClass(elem, className) {
  if (!hasClass(elem, className)) {
    elem.className += ' ' + className;
  }
};

/**
 *
 * @param {HTMLElement} elem
 * @param {string} className
 */
var removeClass = exports.removeClass = function removeClass(elem, className) {
  var newClass = ' ' + elem.className.replace(/[\t\r\n]/g, ' ') + ' ';

  if (hasClass(elem, className)) {
    while (newClass.indexOf(' ' + className + ' ') >= 0) {
      newClass = newClass.replace(' ' + className + ' ', ' ');
    }
    elem.className = newClass.replace(/^\s+|\s+$/g, '');
  }
};

/**
 *
 * @param {HTMLElement} el
 * @param {Function} callback
 * @param {boolean} andForElement - apply callback for el
 * @returns {HTMLElement}
 */
var forEachAncestors = exports.forEachAncestors = function forEachAncestors(el, callback, andForElement) {
  if (andForElement) {
    callback(el);
  }

  while (el.parentNode && !callback(el)) {
    el = el.parentNode;
  }

  return el;
};

/**
 *
 * @param {HTMLElement} el
 * @param {string} name event name
 * @param {Object} data
 */
var triggerEvent = exports.triggerEvent = function triggerEvent(el, name, data) {
  if (!func.isString(name)) {
    throw new TypeError('event name must be String');
  }
  if (!(el instanceof HTMLElement)) {
    throw new TypeError('element must be HTMLElement');
  }
  name = name.trim();
  var event = document.createEvent('CustomEvent');

  event.initCustomEvent(name, false, false, data);
  el.dispatchEvent(event);
};

/**
 * @param {Object} referenceNode after this
 * @param {Object} newNode insert this
 */
var insertAfter = exports.insertAfter = function insertAfter(referenceNode, newNode) {
  return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
};

/**
 * Add event listeners and push them to el[EVENT_LISTENER_LIST]
 * @param {HTMLElement|Node|Document} el DOM element
 * @param {Array} events
 * @param {Function} listener
 */
var addEventListeners = exports.addEventListeners = function addEventListeners(el, events, listener) {
  events.forEach(function (eventName) {
    if (!el[EVENT_LISTENER_LIST]) {
      el[EVENT_LISTENER_LIST] = {};
    }
    if (!el[EVENT_LISTENER_LIST][eventName]) {
      el[EVENT_LISTENER_LIST][eventName] = [];
    }

    el.addEventListener(eventName, listener, eventCaptureParams);
    if (el[EVENT_LISTENER_LIST][eventName].indexOf(listener) < 0) {
      el[EVENT_LISTENER_LIST][eventName].push(listener);
    }
  });
};

/**
 * Remove event listeners and remove them from el[EVENT_LISTENER_LIST]
 * @param {HTMLElement} el DOM element
 * @param {Array} events
 * @param {Function} listener
 */
var removeEventListeners = exports.removeEventListeners = function removeEventListeners(el, events, listener) {
  events.forEach(function (eventName) {
    var index = void 0;

    el.removeEventListener(eventName, listener, false);

    if (el[EVENT_LISTENER_LIST] && el[EVENT_LISTENER_LIST][eventName] && (index = el[EVENT_LISTENER_LIST][eventName].indexOf(listener)) > -1) {
      el[EVENT_LISTENER_LIST][eventName].splice(index, 1);
    }
  });
};

/**
 * Remove ALL event listeners which exists in el[EVENT_LISTENER_LIST]
 * @param instance
 * @param {HTMLElement} el DOM element
 */
var removeAllListenersFromEl = exports.removeAllListenersFromEl = function removeAllListenersFromEl(instance, el) {
  if (!el[EVENT_LISTENER_LIST]) {
    return;
  }

  /* jshint ignore:start */

  /**
   *
   * @callback listener
   * @this {Object} event name
   */
  function rm(listener) {
    if (listener === instance._startEventListener) {
      this.el.removeEventListener(this.eventName, listener, false);
    }
  }

  for (var eventName in el[EVENT_LISTENER_LIST]) {
    el[EVENT_LISTENER_LIST][eventName].forEach(rm, { eventName: eventName, el: el });
  }

  el[EVENT_LISTENER_LIST] = {};
  /* jshint ignore:end */
};

/**
 * Range feature detection
 * @return {Boolean}
 */
var supportsRange = exports.supportsRange = function supportsRange() {
  var input = document.createElement('input');

  input.setAttribute('type', 'range');
  return input.type !== 'text';
};

/***/ }),
/* 3 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);
});
//# sourceMappingURL=range-slider.js.map
(function(e){if("function"==typeof bootstrap)bootstrap("slug",e);else if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeSlug=e}else"undefined"!=typeof window?window.slug=e():global.slug=e()})(function(){var define,ses,bootstrap,module,exports;
return (function(e,t,n){function i(n,s){if(!t[n]){if(!e[n]){var o=typeof require=="function"&&require;if(!s&&o)return o(n,!0);if(r)return r(n,!0);throw new Error("Cannot find module '"+n+"'")}var u=t[n]={exports:{}};e[n][0].call(u.exports,function(t){var r=e[n][1][t];return i(r?r:t)},u,u.exports)}return t[n].exports}var r=typeof require=="function"&&require;for(var s=0;s<n.length;s++)i(n[s]);return i})({1:[function(require,module,exports){
(function (root) {
// lazy require symbols table
var _symbols, removelist;
function symbols(code) {
    if (_symbols) return _symbols[code];
    _symbols = require('unicode/category/So');
    removelist = ['sign','cross','of','symbol','staff','hand','black','white']
        .map(function (word) {return new RegExp(word, 'gi')});
    return _symbols[code];
}

function slug(string, opts) {
    string = string.toString();
    if ('string' === typeof opts)
        opts = {replacement:opts};
    opts = opts || {};
    opts.mode = opts.mode || slug.defaults.mode;
    var defaults = slug.defaults.modes[opts.mode];
    ['replacement','multicharmap','charmap','remove','lower'].forEach(function (key) {
        opts[key] = (key in opts) ? opts[key] : defaults[key];
    });
    if ('undefined' === typeof opts.symbols)
        opts.symbols = defaults.symbols;
    var lengths = [];
    Object.keys(opts.multicharmap).forEach(function (key) {
        var len = key.length;
        if (lengths.indexOf(len) === -1)
            lengths.push(len);
    });
    var code, unicode, result = "";
    for (var char, i = 0, l = string.length; i < l; i++) { char = string[i];
        if (!lengths.some(function (len) {
            var str = string.substr(i, len);
            if (opts.multicharmap[str]) {
                i += len - 1;
                char = opts.multicharmap[str];
                return true;
            } else return false;
        })) {
            if (opts.charmap[char]) {
                char = opts.charmap[char];
                code = char.charCodeAt(0);
            } else {
                code = string.charCodeAt(i);
            }
            if (opts.symbols && (unicode = symbols(code))) {
                char = unicode.name.toLowerCase();
                for(var j = 0, rl = removelist.length; j < rl; j++) {
                    char = char.replace(removelist[j], '');
                }
                char = char.replace(/^\s+|\s+$/g, '');
            }
        }
        char = char.replace(/[^\w\s\-\.\_~]/g, ''); // allowed
        if (opts.remove) char = char.replace(opts.remove, ''); // add flavour
        result += char;
    }
    result = result.replace(/^\s+|\s+$/g, ''); // trim leading/trailing spaces
    result = result.replace(/[-\s]+/g, opts.replacement); // convert spaces
    result = result.replace(opts.replacement+"$",''); // remove trailing separator
    if (opts.lower)
      result = result.toLowerCase();
    return result;
};

slug.defaults = {
    mode: 'pretty',
};

slug.multicharmap = slug.defaults.multicharmap = {
    '<3': 'love', '&&': 'and', '||': 'or', 'w/': 'with',
};

// https://code.djangoproject.com/browser/django/trunk/django/contrib/admin/media/js/urlify.js
slug.charmap  = slug.defaults.charmap = {
    // latin
    'À': 'A', 'Á': 'A', 'Â': 'A', 'Ã': 'A', 'Ä': 'A', 'Å': 'A', 'Æ': 'AE',
    'Ç': 'C', 'È': 'E', 'É': 'E', 'Ê': 'E', 'Ë': 'E', 'Ì': 'I', 'Í': 'I',
    'Î': 'I', 'Ï': 'I', 'Ð': 'D', 'Ñ': 'N', 'Ò': 'O', 'Ó': 'O', 'Ô': 'O',
    'Õ': 'O', 'Ö': 'O', 'Ő': 'O', 'Ø': 'O', 'Ù': 'U', 'Ú': 'U', 'Û': 'U',
    'Ü': 'U', 'Ű': 'U', 'Ý': 'Y', 'Þ': 'TH', 'ß': 'ss', 'à':'a', 'á':'a',
    'â': 'a', 'ã': 'a', 'ä': 'a', 'å': 'a', 'æ': 'ae', 'ç': 'c', 'è': 'e',
    'é': 'e', 'ê': 'e', 'ë': 'e', 'ì': 'i', 'í': 'i', 'î': 'i', 'ï': 'i',
    'ð': 'd', 'ñ': 'n', 'ò': 'o', 'ó': 'o', 'ô': 'o', 'õ': 'o', 'ö': 'o',
    'ő': 'o', 'ø': 'o', 'ù': 'u', 'ú': 'u', 'û': 'u', 'ü': 'u', 'ű': 'u',
    'ý': 'y', 'þ': 'th', 'ÿ': 'y', 'ẞ': 'SS',
    // greek
    'α':'a', 'β':'b', 'γ':'g', 'δ':'d', 'ε':'e', 'ζ':'z', 'η':'h', 'θ':'8',
    'ι':'i', 'κ':'k', 'λ':'l', 'μ':'m', 'ν':'n', 'ξ':'3', 'ο':'o', 'π':'p',
    'ρ':'r', 'σ':'s', 'τ':'t', 'υ':'y', 'φ':'f', 'χ':'x', 'ψ':'ps', 'ω':'w',
    'ά':'a', 'έ':'e', 'ί':'i', 'ό':'o', 'ύ':'y', 'ή':'h', 'ώ':'w', 'ς':'s',
    'ϊ':'i', 'ΰ':'y', 'ϋ':'y', 'ΐ':'i',
    'Α':'A', 'Β':'B', 'Γ':'G', 'Δ':'D', 'Ε':'E', 'Ζ':'Z', 'Η':'H', 'Θ':'8',
    'Ι':'I', 'Κ':'K', 'Λ':'L', 'Μ':'M', 'Ν':'N', 'Ξ':'3', 'Ο':'O', 'Π':'P',
    'Ρ':'R', 'Σ':'S', 'Τ':'T', 'Υ':'Y', 'Φ':'F', 'Χ':'X', 'Ψ':'PS', 'Ω':'W',
    'Ά':'A', 'Έ':'E', 'Ί':'I', 'Ό':'O', 'Ύ':'Y', 'Ή':'H', 'Ώ':'W', 'Ϊ':'I',
    'Ϋ':'Y',
    // turkish
    'ş':'s', 'Ş':'S', 'ı':'i', 'İ':'I',
    'ğ':'g', 'Ğ':'G',
    // russian
    'а':'a', 'б':'b', 'в':'v', 'г':'g', 'д':'d', 'е':'e', 'ё':'yo', 'ж':'zh',
    'з':'z', 'и':'i', 'й':'j', 'к':'k', 'л':'l', 'м':'m', 'н':'n', 'о':'o',
    'п':'p', 'р':'r', 'с':'s', 'т':'t', 'у':'u', 'ф':'f', 'х':'h', 'ц':'c',
    'ч':'ch', 'ш':'sh', 'щ':'sh', 'ъ':'u', 'ы':'y', 'ь':'', 'э':'e', 'ю':'yu',
    'я':'ya',
    'А':'A', 'Б':'B', 'В':'V', 'Г':'G', 'Д':'D', 'Е':'E', 'Ё':'Yo', 'Ж':'Zh',
    'З':'Z', 'И':'I', 'Й':'J', 'К':'K', 'Л':'L', 'М':'M', 'Н':'N', 'О':'O',
    'П':'P', 'Р':'R', 'С':'S', 'Т':'T', 'У':'U', 'Ф':'F', 'Х':'H', 'Ц':'C',
    'Ч':'Ch', 'Ш':'Sh', 'Щ':'Sh', 'Ъ':'U', 'Ы':'Y', 'Ь':'', 'Э':'E', 'Ю':'Yu',
    'Я':'Ya',
    // ukranian
    'Є':'Ye', 'І':'I', 'Ї':'Yi', 'Ґ':'G', 'є':'ye', 'і':'i', 'ї':'yi', 'ґ':'g',
    // czech
    'č':'c', 'ď':'d', 'ě':'e', 'ň': 'n', 'ř':'r', 'š':'s', 'ť':'t', 'ů':'u',
    'ž':'z', 'Č':'C', 'Ď':'D', 'Ě':'E', 'Ň': 'N', 'Ř':'R', 'Š':'S', 'Ť':'T',
    'Ů':'U', 'Ž':'Z',
    // polish
    'ą':'a', 'ć':'c', 'ę':'e', 'ł':'l', 'ń':'n', 'ś':'s', 'ź':'z',
    'ż':'z', 'Ą':'A', 'Ć':'C', 'Ę':'E', 'Ł':'L', 'Ń':'N', 'Ś':'S',
    'Ź':'Z', 'Ż':'Z',
    // latvian
    'ā':'a', 'ē':'e', 'ģ':'g', 'ī':'i', 'ķ':'k', 'ļ':'l', 'ņ':'n',
    'ū':'u', 'Ā':'A', 'Ē':'E', 'Ģ':'G', 'Ī':'I',
    'Ķ':'K', 'Ļ':'L', 'Ņ':'N', 'Ū':'U',
    // lithuanian
    'ė':'e', 'į':'i', 'ų':'u', 'Ė': 'E', 'Į': 'I', 'Ų':'U',
    // romanian
    'ț':'t', 'Ț':'T', 'ţ':'t', 'Ţ':'T', 'ș':'s', 'Ș':'S', 'ă':'a', 'Ă':'A',
    // vietnamese
    'Ạ': 'A', 'Ả': 'A', 'Ầ': 'A', 'Ấ': 'A', 'Ậ': 'A', 'Ẩ': 'A', 'Ẫ': 'A',
    'Ằ': 'A', 'Ắ': 'A', 'Ặ': 'A', 'Ẳ': 'A', 'Ẵ': 'A', 'Ẹ': 'E', 'Ẻ': 'E',
    'Ẽ': 'E', 'Ề': 'E', 'Ế': 'E', 'Ệ': 'E', 'Ể': 'E', 'Ễ': 'E', 'Ị': 'I',
    'Ỉ': 'I', 'Ĩ': 'I', 'Ọ': 'O', 'Ỏ': 'O', 'Ồ': 'O', 'Ố': 'O', 'Ộ': 'O',
    'Ổ': 'O', 'Ỗ': 'O', 'Ơ': 'O', 'Ờ': 'O', 'Ớ': 'O', 'Ợ': 'O', 'Ở': 'O',
    'Ỡ': 'O', 'Ụ': 'U', 'Ủ': 'U', 'Ũ': 'U', 'Ư': 'U', 'Ừ': 'U', 'Ứ': 'U',
    'Ự': 'U', 'Ử': 'U', 'Ữ': 'U', 'Ỳ': 'Y', 'Ỵ': 'Y', 'Ỷ': 'Y', 'Ỹ': 'Y',
    'Đ': 'D', 'ạ': 'a', 'ả': 'a', 'ầ': 'a', 'ấ': 'a', 'ậ': 'a', 'ẩ': 'a',
    'ẫ': 'a', 'ằ': 'a', 'ắ': 'a', 'ặ': 'a', 'ẳ': 'a', 'ẵ': 'a', 'ẹ': 'e',
    'ẻ': 'e', 'ẽ': 'e', 'ề': 'e', 'ế': 'e', 'ệ': 'e', 'ể': 'e', 'ễ': 'e',
    'ị': 'i', 'ỉ': 'i', 'ĩ': 'i', 'ọ': 'o', 'ỏ': 'o', 'ồ': 'o', 'ố': 'o',
    'ộ': 'o', 'ổ': 'o', 'ỗ': 'o', 'ơ': 'o', 'ờ': 'o', 'ớ': 'o', 'ợ': 'o',
    'ở': 'o', 'ỡ': 'o', 'ụ': 'u', 'ủ': 'u', 'ũ': 'u', 'ư': 'u', 'ừ': 'u',
    'ứ': 'u', 'ự': 'u', 'ử': 'u', 'ữ': 'u', 'ỳ': 'y', 'ỵ': 'y', 'ỷ': 'y',
    'ỹ': 'y', 'đ': 'd',
    // currency
    '€': 'euro', '₢': 'cruzeiro', '₣': 'french franc', '£': 'pound',
    '₤': 'lira', '₥': 'mill', '₦': 'naira', '₧': 'peseta', '₨': 'rupee',
    '₩': 'won', '₪': 'new shequel', '₫': 'dong', '₭': 'kip', '₮': 'tugrik',
    '₯': 'drachma', '₰': 'penny', '₱': 'peso', '₲': 'guarani', '₳': 'austral',
    '₴': 'hryvnia', '₵': 'cedi', '¢': 'cent', '¥': 'yen', '元': 'yuan',
    '円': 'yen', '﷼': 'rial', '₠': 'ecu', '¤': 'currency', '฿': 'baht',
    "$": 'dollar', '₹': 'indian rupee',
    // symbols
    '©':'(c)', 'œ': 'oe', 'Œ': 'OE', '∑': 'sum', '®': '(r)', '†': '+',
    '“': '"', '”': '"', '‘': "'", '’': "'", '∂': 'd', 'ƒ': 'f', '™': 'tm',
    '℠': 'sm', '…': '...', '˚': 'o', 'º': 'o', 'ª': 'a', '•': '*',
    '∆': 'delta', '∞': 'infinity', '♥': 'love', '&': 'and', '|': 'or',
    '<': 'less', '>': 'greater',
};

slug.defaults.modes = {
    rfc3986: {
        replacement: '-',
        symbols: true,
        remove: null,
        lower: true,
        charmap: slug.defaults.charmap,
        multicharmap: slug.defaults.multicharmap,
    },
    pretty: {
        replacement: '-',
        symbols: true,
        remove: /[.]/g,
        lower: false,
        charmap: slug.defaults.charmap,
        multicharmap: slug.defaults.multicharmap,
    },
};

// Be compatible with different module systems

if (typeof define !== 'undefined' && define.amd) { // AMD
    // dont load symbols table in the browser
    Object.keys(slug.defaults.modes).forEach(function (key) {
        slug.defaults.modes[key].symbols = false;
    });
    define([], function () {return slug});
} else if (typeof module !== 'undefined' && module.exports) { // CommonJS
    symbols(); // preload symbols table
    module.exports = slug;
} else { // Script tag
    // dont load symbols table in the browser
    Object.keys(slug.defaults.modes).forEach(function (key) {
        slug.defaults.modes[key].symbols = false;
    });
    root.slug = slug;
}

}(this));

},{"unicode/category/So":2}],2:[function(require,module,exports){

},{}]},{},[1])(1)
});
;
(function () {
    'use strict';

    var main = {
            init: function () {
                home.init();
                products.init();
                about.init();
                tracking.init();

                $(".select-custom").on("click", "p", function () {
                    $(this).closest(".select-custom").toggleClass("active");
                });

                $(".select-custom").on("click", "li", function () {
                    $(this).closest(".select-custom").removeClass("active");
                });

                $("body").on("click", "#menu-menu-mobile > li.menu-item-has-children", function () {
                    $(this).children(".sub-menu").toggleClass("active");
                    $(this).toggleClass("active");
                });
                
                // if(location.host !== 'stage.optimumpet.com.br'){
                //     document.querySelector('#menu-item-698').classList.add('show');
                //     document.querySelector('#menu-item-746').classList.add('show');
                //     document.querySelector('#menu-item-747').classList.add('show');
                //     document.querySelector('#menu-item-748').classList.add('show');
                //     document.querySelector('.dicas-footer-cao').classList.add('show');
                //     document.querySelector('.dicas-footer-gato').classList.add('show');
                // } else {
                //     $('body').on('click', 'a', function(event){
                //         var link = $(this).attr('href');
                //         var hasThis = 'category/'
                //         console.log($(this).attr('href'));
                //         if(link.indexOf(hasThis) != -1){
                //             event.preventDefault();
                            
                //             console.log(hasThis + "<<<<<<< found");
                            
                //             window.location.href = link.replace(hasThis, '');

                //         }
                //     });
                // }
            },

            mobile_check: function () {
                var check = false;
                (function (a) {
                    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od|ad)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) {
                        check = true;
                    }
                })(navigator.userAgent || navigator.vendor || window.opera);
                return check;
            }
        },
        home = {
            init: function () {
                var elPaginateScroll = document.querySelectorAll(".paginate-scroll")[0];
                var elPaginateScrollStep = document.querySelectorAll(".paginate-scroll .active")[0];
                var elHeader = document.querySelectorAll(".header-main")[0];
                var elContent = document.querySelectorAll(".container-fullpage")[0];

                $('#fullpage').fullpage({
                    easing: 'ease',
                    scrollOverflow: true,
                    onLeave: function (index, nextIndex, direction) {
                        elContent.classList.remove("active");

                        //Control effect info products
                        if (direction === "down") {

                            if (nextIndex === 2) {

                                ga('send', 'pageview', '/nutricaocompleta-home', dispositivo )

                                document.querySelector(".info-product.step-2").classList.add('active');
                                document.querySelector(".info-product.step-3").classList.remove('active');
                                document.querySelector(".info-product.step-4").classList.remove('active');

                            } else if (nextIndex === 3) {

                                ga('send', 'pageview', '/embasamentocientifico-home', dispositivo )

                                document.querySelectorAll(".info-product.step-2 .image")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .image")[0].className += " fadeInUp animated";

                                document.querySelectorAll(".info-product.step-2 .title")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .title")[0].className += " fadeInUp animated";

                                document.querySelectorAll(".info-product.step-2 .description")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .description")[0].className += " fadeInUp animated";

                                document.querySelectorAll(".info-product.step-2 .selo")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .selo")[0].className += " fadeInUp animated";

                                document.querySelectorAll(".info-product.step-2 .btn-dark")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className += " fadeInUp animated";

                                document.querySelector(".info-product.step-2").classList.remove('active');
                                document.querySelector(".info-product.step-3").classList.add('active');
                                document.querySelector(".info-product.step-4").classList.remove('active');

                                setTimeout(function () {
                                    document.querySelectorAll(".info-product.step-2 .image")[0].className = "image";
                                    document.querySelectorAll(".info-product.step-3 .image")[0].className = "image active";

                                    document.querySelectorAll(".info-product.step-2 .title")[0].className = "title";
                                    document.querySelectorAll(".info-product.step-3 .title")[0].className = "title active";

                                    document.querySelectorAll(".info-product.step-2 .description")[0].className = "description";
                                    document.querySelectorAll(".info-product.step-3 .description")[0].className = "description active";

                                    document.querySelectorAll(".info-product.step-2 .selo")[0].className = "selo";
                                    document.querySelectorAll(".info-product.step-3 .selo")[0].className = "selo active";

                                    document.querySelectorAll(".info-product.step-2 .btn-dark")[0].className = "btn-dark";
                                    document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className = "btn-dark active";
                                }, 700);
                            } else if (nextIndex === 4) {

                                ga('send', 'pageview', '/satisfacaogarantida-home', dispositivo )

                                document.querySelectorAll(".info-product.step-3 .image")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-4 .image")[0].className += " fadeInUp animated";

                                document.querySelectorAll(".info-product.step-3 .title")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-4 .title")[0].className += " fadeInUp animated";

                                document.querySelectorAll(".info-product.step-3 .description")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-4 .description")[0].className += " fadeInUp animated";

                                document.querySelectorAll(".info-product.step-3 .selo")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-4 .selo")[0].className += " fadeInUp animated";
                                
                                document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".info-product.step-4 .btn-dark")[0].className += " fadeInUp animated";

                                document.querySelector(".info-product.step-2").classList.remove('active');
                                document.querySelector(".info-product.step-3").classList.remove('active');
                                document.querySelector(".info-product.step-4").classList.add('active');

                                setTimeout(function () {
                                    document.querySelectorAll(".info-product.step-3 .image")[0].className = "image";
                                    document.querySelectorAll(".info-product.step-4 .image")[0].className = "image active";

                                    document.querySelectorAll(".info-product.step-3 .title")[0].className = "title";
                                    document.querySelectorAll(".info-product.step-4 .title")[0].className = "title active";

                                    document.querySelectorAll(".info-product.step-3 .description")[0].className = "description";
                                    document.querySelectorAll(".info-product.step-4 .description")[0].className = "description active";

                                    document.querySelectorAll(".info-product.step-3 .selo")[0].className = "selo";
                                    document.querySelectorAll(".info-product.step-4 .selo")[0].className = "selo active";

                                    document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className = "btn-dark";
                                    document.querySelectorAll(".info-product.step-4 .btn-dark")[0].className = "btn-dark active";
                                }, 700);
                            }
                        }

                        if (direction === "up") {
                            if (nextIndex === 3) {
                                document.querySelectorAll(".info-product.step-4 .image")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .image")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-4 .title")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .title")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-4 .description")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .description")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-4 .selo")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .selo")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-4 .btn-dark")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className += " fadeInDown animated";

                                document.querySelector(".info-product.step-2").classList.remove('active');
                                document.querySelector(".info-product.step-3").classList.add('active');
                                document.querySelector(".info-product.step-4").classList.remove('active');

                                setTimeout(function () {
                                    document.querySelectorAll(".info-product.step-4 .image")[0].className = "image";
                                    document.querySelectorAll(".info-product.step-3 .image")[0].className = "image active";

                                    document.querySelectorAll(".info-product.step-4 .title")[0].className = "title";
                                    document.querySelectorAll(".info-product.step-3 .title")[0].className = "title active";

                                    document.querySelectorAll(".info-product.step-4 .description")[0].className = "description";
                                    document.querySelectorAll(".info-product.step-3 .description")[0].className = "description active";

                                    document.querySelectorAll(".info-product.step-4 .selo")[0].className = "selo";
                                    document.querySelectorAll(".info-product.step-3 .selo")[0].className = "selo active";

                                    document.querySelectorAll(".info-product.step-4 .btn-dark")[0].className = "btn-dark";
                                    document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className = "btn-dark active";
                                }, 700);
                            } else if (nextIndex === 2) {
                                document.querySelectorAll(".info-product.step-3 .image")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-2 .image")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-3 .title")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-2 .title")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-3 .description")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-2 .description")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-3 .selo")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-2 .selo")[0].className += " fadeInDown animated";

                                document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".info-product.step-2 .btn-dark")[0].className += " fadeInDown animated";

                                document.querySelector(".info-product.step-2").classList.add('active');
                                document.querySelector(".info-product.step-3").classList.remove('active');
                                document.querySelector(".info-product.step-4").classList.remove('active');

                                setTimeout(function () {
                                    document.querySelectorAll(".info-product.step-3 .image")[0].className = "image";
                                    document.querySelectorAll(".info-product.step-2 .image")[0].className = "image active";

                                    document.querySelectorAll(".info-product.step-3 .title")[0].className = "title";
                                    document.querySelectorAll(".info-product.step-2 .title")[0].className = "title active";

                                    document.querySelectorAll(".info-product.step-3 .description")[0].className = "description";
                                    document.querySelectorAll(".info-product.step-2 .description")[0].className = "description active";

                                    document.querySelectorAll(".info-product.step-3 .selo")[0].className = "selo";
                                    document.querySelectorAll(".info-product.step-2 .selo")[0].className = "selo active";

                                    document.querySelectorAll(".info-product.step-3 .btn-dark")[0].className = "btn-dark";
                                    document.querySelectorAll(".info-product.step-2 .btn-dark")[0].className = "btn-dark active";
                                }, 700);
                            } else {
                                document.querySelector(".info-product.step-2").classList.remove('active');
                                document.querySelector(".info-product.step-3").classList.remove('active');
                                document.querySelector(".info-product.step-4").classList.add('active');
                            }
                        }

                        //Control header
                        /*
                        if (nextIndex >= 2) {
                            elHeader.className += " active";
                        } else {
                            elHeader.classList.remove("active");
                        }
                        */

                        //Control navigation section
                        elPaginateScroll.classList.remove("active");
                        if (nextIndex >= 2 && nextIndex <= 4) {
                            elPaginateScrollStep.classList.remove("step-1", "step-2", "step-3");

                            elContent.className += " active";

                            elPaginateScroll.className += " active";
                        } else {
                            elPaginateScroll.classList.remove("active");
                        }

                        if (nextIndex === 1) {
                            if (direction === "up") {
                                elContent.classList.remove("position-top", "active");
                            }
                        } else if (nextIndex === 2) {
                            if (direction === "up") {
                                elContent.className += " position-bottom";
                            }
                            elPaginateScrollStep.className += " step-1";
                        } else if (nextIndex === 3) {
                            elPaginateScrollStep.className += " step-2";
                        } else if (nextIndex === 4) {
                            elPaginateScrollStep.className += " step-3";
                            if (direction === "down") {
                                elContent.className += " position-top";
                            }
                        } else if (nextIndex === 5) {
                            if (direction === "down") {
                                elContent.classList.remove("position-bottom", "active");
                            }
                        }
                    },
                });

                $(".slider-home").slick({
                    infinite: true,
                    arrows: false,
                    dots: false,
                    autoplay: false,
                    speed: 700,
                    slidesToShow: 1,
                    slidesToScroll: 1
                });

                //ticking machine
                var percentTime, progressTime;
                var tick;
                var time = 1;
                var progressBarIndex = 0;

                $('.progressBarContainer .progressBar').each(function (index) {
                    var progress = "<div class='inProgress inProgress" + index + "'><svg class='progress' style='position:absolute;' width='40' height='40' viewBox='0 0 40 40'><circle class='progress__value progressCircle progress" + index + "' cx='20' cy='20' r='10' fill='none' stroke='#ffffff' stroke-width='2'></circle></svg></div>";
                    $(this).html(progress);
                });

                function startProgressbar() {
                    resetProgressbar();
                    percentTime = 0;
                    progressTime = 128;
                    tick = setInterval(interval, 10);
                }

                function interval() {
                    if (($('.slider-home .slick-track div[data-slick-index="' + progressBarIndex + '"]').attr("aria-hidden")) === "true") {
                        progressBarIndex = $('.slider-home .slick-track div[aria-hidden="false"]').data("slickIndex");
                        startProgressbar();
                    } else {

                        percentTime += 1 / (time + 5);

                        progressTime += 1 / (time + 8);

                        $('.inProgress' + progressBarIndex).css({
                            width: percentTime + "%"
                        });

                        $('.inProgress' + progressBarIndex).parent().addClass("active");

                        $('.progress' + progressBarIndex).attr({'style': 'stroke-dashoffset:' + parseInt(progressTime) + ';'});

                        if (percentTime >= 100) {
                            $('.slider-home').slick('slickNext');
                            progressBarIndex++;
                            if (progressBarIndex > 2) {
                                progressBarIndex = 0;
                            }
                            startProgressbar();
                        }
                    }
                }

                function resetProgressbar() {
                    $(".progressBar").removeClass("active");

                    $(".inProgress").parent().removeClass("active");

                    $('.inProgress').css({
                        width: 0 + '%'
                    });

                    $('.progressCircle').attr('style', 'stroke-dashoffset: 194;');

                    clearInterval(tick);

                }
                

                startProgressbar();
                // End ticking machine

                $('.progressBarContainer div span').click(function () {
                    clearInterval(tick);

                    var goToThisIndex = $(this).data("slickIndex");
                    $('.slider-home').slick('slickGoTo', goToThisIndex, false);

                    startProgressbar();
                });
            }
        },
        products = {
            init: function () {
                $("body").on("click", ".go-next", function (event) {
                    event.preventDefault();

                    $("html, body").animate({
                        scrollTop: $('.info-buy').offset().top - 100
                    }, 750);
                });

                $("body").on("click", ".goToSextion", function (event) {
                    event.preventDefault();

                    var section = $(this).data('section');

                    $("html, body").animate({
                        scrollTop: $('.'+section).offset().top - 100
                    }, 750);
                });


                $(".header-product").on("click", ".go-to-section-mobile", function () {
                    $(this).closest(".nav").removeClass("active");

                    $("html, body").animate({
                        scrollTop: $('#' + $(this).data("section")).offset().top - 100
                    }, 750);
                });

                $(".tipo-alimento").on("click", "input[type='radio']", function () {
                    window.history.pushState("object or string", "Title", $(this).data("url"));

                    if ($(this).val() === "11" || $(this).val() === "17") {
                        $(".select-custom.secos").addClass("show");
                        $(".select-custom.umidos").removeClass("show");
                    } else {
                        $(".select-custom.umidos").addClass("show");
                        $(".select-custom.secos").removeClass("show");
                    }

                    $(this).closest(".select-custom").children(".selected").text($(this).next().text());

                    $.ajax({
                        url: ajaxurl,
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            action: "filter_post",
                            id: $(this).val()
                        },
                        beforeSend: function () {
                            $(".box-loader").show();
                            $(".box-product").hide();
                        },
                        success: function (response) {

                            $(".title-section").text(response.title_section);

                            $(".box-loader").hide();
                            $(".box-product").show();

                            $(".list-products").html("");
                            var template = "";
                            $.each(response.resultado, function (index, value) {
                                template += '<li>';
                                template += '<a href="' + value.url + '">';
                                template += '    <img src="' + value.imagem + '" alt="">';
                                template += '</a>';
                                template += '<a href="' + value.url + '" class="title-product">';
                                template += ' <h3>' + value.titulo + '</h3>';
                                template += '</a>';
                                template += '<a href="' + value.url + '" class="btn-dark white">CONHEÇA</a>';
                                template += '<a href="#" class="btn-dark buy" data-cobasi="' + value.link_cobasi + '" data-petlove="' + value.link_petlove + '" data-petz="' + value.link_petz + '">Comprar</a>';
                                template += '</li>';
                            });

                            $(".list-products").append(template);

                        },
                        error: function (response) {
                            console.error(response);
                        }
                    });
                });

                $(".idade-animal").on("click", "input[type='radio']", function () {
                    window.history.pushState("object or string", "Title", $(this).data("url"));
                    $(this).closest(".select-custom").children(".selected").text($(this).next().text());

                    $.ajax({
                        url: ajaxurl,
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            action: "filter_post",
                            id: $(this).val()
                        },
                        beforeSend: function () {
                            $(".box-loader").show();
                            $(".box-product").hide();
                        },
                        success: function (response) {

                            $(".title-section").text(response.title_section);

                            $(".box-loader").hide();
                            $(".box-product").show();

                            $(".list-products").html("");
                            var template = "";
                            $.each(response.resultado, function (index, value) {
                                template += '<li>';
                                template += '<a href="' + value.url + '">';
                                template += '    <img src="' + value.imagem + '" alt="">';
                                template += '</a>';
                                template += '<a href="' + value.url + '" class="title-product">';
                                template += ' <h3>' + value.titulo + '</h3>';
                                template += '</a>';
                                template += '<a href="' + value.url + '" class="btn-dark white">CONHEÇA</a>';
                                template += '<a href="#" class="btn-dark buy" data-cobasi="' + value.link_cobasi + '" data-petlove="' + value.link_petlove + '" data-petz="' + value.link_petz + '">Comprar</a>';
                                template += '</li>';
                            });

                            $(".list-products").append(template);

                        },
                        error: function (response) {
                            console.error(response);
                        }
                    });
                });

                var SPMaskBehavior = function (val) {
                        return val.replace(/\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';
                    },
                    spOptions = {
                        onKeyPress: function (val, e, field, options) {
                            field.mask(SPMaskBehavior.apply({}, arguments), options);
                        }
                    };

                $('input[type="tel"]').mask(SPMaskBehavior, spOptions);

                if (main.mobile_check()) {
                    $(".footer-main").on("click", "h3", function () {
                        $(this).toggleClass("active");
                        $(this).next().toggleClass("active");
                    });
                }

                $("body").on("click", ".close", function (event) {
                    event.preventDefault();
                    $(this).parent().toggleClass("active");
                });

                $("body").on("click", ".composicao", function () {
                    event.preventDefault();
                    $(".modal-niveis-garantia").toggleClass("active");
                    ga('send', 'pageview', '/tabela-níveis-de-garantia');
                });

                $("body").on("click", ".buy", function (event) {
                    event.preventDefault();

                    $(".modal-stores .cobasi").attr("href", $(this).data("cobasi"));
                    $(".modal-stores .petlove").attr("href", $(this).data("petlove"));
                    $(".modal-stores .petz").attr("href", $(this).data("petz"));
                    $(".modal-stores .cobasi, .modal-stores .petlove, .modal-stores .petz").data("label", $(this).data("produto"));

                    $(".modal-stores").toggleClass("active");
                });

                var actualSection;
                var pageview1='0',pageview2='0',pageview3='0';

                $('.detail-product').fullpage({
                    easing: 'ease',
                    delay: 200,
                    scrollOverflow: true,
                    afterLoad: function (anchorLink, index) {
                        actualSection = index;
                    },
                    onLeave: function (index, nextIndex, direction) {
                        console.log(nextIndex);
                        if (nextIndex > 2) {
                            $(".container-detail-product").addClass("left-container");
                        } else {
                            $(".container-detail-product").removeClass("left-container");
                        }

                        $(".header-product a").removeClass("active");

                        //Control effect info products
                        if (direction === "down") {
                            if (nextIndex === 2) {
                                             
                                if(pageview1==='0'){
                                    ga( 'send', 'pageview', page+'beneficio', dispositivo );
                                    pageview1='1';
                                }

                                document.querySelectorAll(".box-1-left")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".box-1-right")[0].className += " fadeOutUp delay-animation animated";

                                document.querySelectorAll(".box-2-left")[0].className += " fadeInUp delay-animation animated";
                                document.querySelectorAll(".box-2-right")[0].className += " fadeInUp delay-animation animated";

                                $(".header-product a.beneficios").addClass("active");
                                $(".btn-dark").addClass("active-button");

                                setTimeout(function () {
                                    document.querySelectorAll(".box-1-left")[0].className = "box-1-left";
                                    document.querySelectorAll(".box-1-right")[0].className = "box-1-right";

                                    document.querySelectorAll(".box-2-left")[0].className = "box-2-left active";
                                    document.querySelectorAll(".box-2-right")[0].className = "box-2-right active";
                                }, 700);
                            } else if (nextIndex === 3) {
                                
                                if(pageview2==='0'){
                                    ga( 'send', 'pageview', page+'ingredientes', dispositivo )
                                    pageview2='1';
                                }

                                document.querySelectorAll(".box-2-left")[0].className += " fadeOutLeft delay-animation animated";
                                document.querySelectorAll(".box-2-right")[0].className += " fadeOutLeft delay-animation animated";

                                document.querySelectorAll(".box-3-right")[0].className += " fadeInRight delay-animation animated";

                                $(".header-product a.ingredientes").addClass("active");

                                setTimeout(function () {
                                    document.querySelectorAll(".box-2-left")[0].className = "box-2-left";
                                    document.querySelectorAll(".box-2-right")[0].className = "box-2-right";

                                    document.querySelectorAll(".box-3-right")[0].className = "box-3-right active";
                                }, 700);
                            } else if (nextIndex === 4) {
                                                                
                                if(pageview3==='0'){
                                    ga( 'send', 'pageview', page+'quantidade', dispositivo )
                                    pageview3='1';
                                }

                                document.querySelectorAll(".box-3-right")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".box-4-right")[0].className += " fadeInUp delay-animation animated";

                                document.querySelectorAll(".image-1")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".image-2")[0].className += " fadeInUp delay-animation animated";

                                $(".header-product a.quantidade").addClass("active");

                                setTimeout(function () {
                                    document.querySelectorAll(".box-3-right")[0].className = "box-3-right";
                                    document.querySelectorAll(".box-4-right")[0].className = "box-4-right active";

                                    document.querySelectorAll(".image-1")[0].className = "image-1";
                                    document.querySelectorAll(".image-2")[0].className = "image-2 active";
                                }, 700);

                            } else {
                                
                                $(".container-detail-product .risco").addClass('hide');
                                
                                setTimeout(function () {
                                    $(".container-detail-product").addClass("top");
                                    $(".header-product").addClass("active");
                                }, 0);

                            }
                        }

                        //Control effect info products
                        if (direction === "up") {
                            if (nextIndex === 1) {
                                document.querySelectorAll(".box-1-left")[0].className += " fadeInDown delay-animation animated";
                                document.querySelectorAll(".box-1-right")[0].className += " fadeInDown delay-animation animated";

                                document.querySelectorAll(".box-2-left")[0].className += " fadeOutDown delay-animation animated";
                                document.querySelectorAll(".box-2-right")[0].className += " fadeOutDown delay-animation animated";

                                $(".btn-dark").removeClass("active-button");

                                setTimeout(function () {
                                    document.querySelectorAll(".box-1-left")[0].className = "box-1-left active";
                                    document.querySelectorAll(".box-1-right")[0].className = "box-1-right active";

                                    document.querySelectorAll(".box-2-left")[0].className = "box-2-left";
                                    document.querySelectorAll(".box-2-right")[0].className = "box-2-right";
                                }, 700);
                            } else if (nextIndex === 2) {
                                document.querySelectorAll(".box-2-left")[0].className += " fadeInLeft delay-animation animated";
                                document.querySelectorAll(".box-2-right")[0].className += " fadeInLeft delay-animation animated";

                                document.querySelectorAll(".box-3-right")[0].className += " fadeOutRight delay-animation animated";

                                $(".header-product a.beneficios").addClass("active");
                                setTimeout(function () {
                                    document.querySelectorAll(".box-2-left")[0].className = "box-2-left active";
                                    document.querySelectorAll(".box-2-right")[0].className = "box-2-right active";

                                    document.querySelectorAll(".box-3-right")[0].className = "box-3-right";
                                }, 700);
                            } else if (nextIndex === 3) {
                                document.querySelectorAll(".box-3-right")[0].className += " fadeInDown delay-animation animated";
                                document.querySelectorAll(".box-4-right")[0].className += " fadeOutDown delay-animation animated";

                                document.querySelectorAll(".image-1")[0].className += " fadeInDown delay-animation animated";
                                document.querySelectorAll(".image-2")[0].className += " fadeOutDown delay-animation animated";

                                $(".header-product a.ingredientes").addClass("active");
                                setTimeout(function () {
                                    document.querySelectorAll(".box-3-right")[0].className = "box-3-right active";
                                    document.querySelectorAll(".box-4-right")[0].className = "box-4-right";

                                    document.querySelectorAll(".image-1")[0].className = "image-1 active";
                                    document.querySelectorAll(".image-2")[0].className = "image-2";
                                }, 700);
                            } else {
                                
                                $(".container-detail-product").removeClass("top");
                                $(".header-product").removeClass("active");
                                $(".header-product a.quantidade").addClass("active");
                                
                                console.log("testeUp");
    
                                $(".container-detail-product .risco").removeClass('hide');
                            }
                        }
                    }
                });

                $("body").on("click", ".go-to-section", function (event) {
                    event.preventDefault();
                    var goToSection = $(this).data('index');

                    console.log("Atual: " + actualSection);
                    console.log("GoTo: " + goToSection);

                    // $.fn.fullpage.moveSectionDown();
                    // $.fn.fullpage.moveSectionUp();

                    var diferenca;
                    if ((goToSection - actualSection) > 0) {
                        diferenca = goToSection - actualSection;
                        console.log(diferenca);
                        $(".header-product a.beneficios").addClass("active");
                        $(".btn-dark").addClass("active-button");

                        if (diferenca === 1) {
                            $.fn.fullpage.moveSectionDown();
                        } else {
                            if (actualSection === 1 && goToSection === 3) {
                                $(".container-detail-product").addClass("left-container");
                                $.fn.fullpage.moveTo(3);

                                document.querySelectorAll(".box-1-left")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".box-1-right")[0].className += " fadeOutUp delay-animation animated";

                                document.querySelectorAll(".box-2-left")[0].style.display = "none";
                                document.querySelectorAll(".box-2-right")[0].style.display = "none";

                                document.querySelectorAll(".box-3-right")[0].className += " fadeInRight delay-animation animated";

                                setTimeout(function () {
                                    document.querySelectorAll(".box-1-left")[0].className = "box-1-left";
                                    document.querySelectorAll(".box-1-right")[0].className = "box-1-right";

                                    document.querySelectorAll(".box-2-left")[0].removeAttribute("style");
                                    document.querySelectorAll(".box-2-right")[0].removeAttribute("style");

                                    document.querySelectorAll(".box-3-right")[0].className = "box-3-right active";
                                }, 700);
                            } else if (actualSection === 1 && goToSection === 4) {
                                $(".container-detail-product").addClass("left-container");
                                $.fn.fullpage.moveTo(4);

                                document.querySelectorAll(".box-1-left")[0].className += " fadeOutUp delay-animation animated";
                                document.querySelectorAll(".box-1-right")[0].className += " fadeOutUp delay-animation animated";

                                document.querySelectorAll(".box-2-left")[0].style.display = "none";
                                document.querySelectorAll(".box-2-right")[0].style.display = "none";

                                document.querySelectorAll(".box-3-right")[0].style.display = "none";

                                setTimeout(function () {
                                    document.querySelectorAll(".box-1-left")[0].className = "box-1-left";
                                    document.querySelectorAll(".box-1-right")[0].className = "box-1-right";

                                    document.querySelectorAll(".box-2-left")[0].removeAttribute("style");
                                    document.querySelectorAll(".box-2-right")[0].removeAttribute("style");

                                    document.querySelectorAll(".box-3-right")[0].removeAttribute("style");
                                }, 700);
                            } else if (actualSection === 2 && goToSection === 4) {
                                $.fn.fullpage.moveTo(4);

                                document.querySelectorAll(".box-2-left")[0].className += " fadeOutLeft delay-animation animated";
                                document.querySelectorAll(".box-2-right")[0].className += " fadeOutLeft delay-animation animated";

                                document.querySelectorAll(".box-3-right")[0].style.display = "none";

                                setTimeout(function () {

                                    document.querySelectorAll(".box-2-left")[0].className = "box-2-left";
                                    document.querySelectorAll(".box-2-right")[0].className = "box-2-right";

                                    document.querySelectorAll(".box-3-right")[0].removeAttribute("style");
                                }, 700);
                            }
                        }
                    } else if ((goToSection - actualSection) < 0) {
                        console.log("Up");
                        diferenca = actualSection - goToSection;
                        console.log(diferenca);
                        $(".header-product a.beneficios").addClass("active");
                        $(".btn-dark").addClass("active-button");

                        if (diferenca === 1) {
                            $.fn.fullpage.moveSectionUp();
                        } else {
                            if (actualSection === 4 && goToSection === 2) {
                                $.fn.fullpage.moveTo(2);

                                document.querySelectorAll(".box-4-right")[0].className += " fadeOutDown delay-animation animated";

                                document.querySelectorAll(".box-3-right")[0].style.display = "none";

                                document.querySelectorAll(".image-1")[0].className += " fadeInDown delay-animation animated";
                                document.querySelectorAll(".image-2")[0].className += " fadeOutDown delay-animation animated";

                                setTimeout(function () {

                                    document.querySelectorAll(".box-4-right")[0].className = "box-4-right";

                                    document.querySelectorAll(".image-1")[0].className = "image-1 active";
                                    document.querySelectorAll(".image-2")[0].className = "image-2";

                                    document.querySelectorAll(".box-3-right")[0].removeAttribute("style");
                                }, 700);
                            }
                        }
                    }
                });

                var totalSlider = $(".lista-beneficios .item").length;

                $(".navigation .total").text("1/" + totalSlider);

                $(".navigation").on("click", ".slick-prev", function () {
                    $(".lista-beneficios").slick("slickPrev");
                });

                $(".navigation").on("click", ".slick-next", function () {
                    $(".lista-beneficios").slick("slickNext");
                });

                $(".lista-beneficios").on('afterChange', function (event, slick, currentSlide, nextSlide) {
                    $(".navigation .total").text((currentSlide + 1) + "/" + totalSlider);
                });

                $(".lista-beneficios").slick({
                    infinite: true,
                    arrows: false,
                    autoplay: false,
                    slidesToShow: 1,
                    slidesToScroll: 1
                });

                $(".header-product").on("click", "h4", function () {
                    $(this).toggleClass("active");
                    $(".header-product .nav").toggleClass("active");
                });
            }
        },
        about = {
            init: function () {

                var figSection = $(".figure_section");

                if (figSection.length) {

                    var thisPos = figSection.position().top;
                    var thisHeight = figSection.outerHeight() / 2;

                    var childPos = figSection.offset();
                    var parentPos = figSection.parent().offset();
                    var childOffset = {
                        top: childPos.top - parentPos.top,
                        left: childPos.left - parentPos.left
                    }

                    $(".first_section").append("<div class='bg_section'></div>")

                    $(".bg_section").css({top: childOffset.top + thisHeight + 'px'});
                }
            }
        },
        tracking = {
            init: function () {
                if(page=="-"){
                    page = "home";
                }
                $("body").on("click", ".section_inner.contact-form .wpcf7-submit", function () {
                    ga('send', 'event', 'enviar', 'formulario', 'fale-conosco' );
                });
                $(".sub-caes").on("click", "a", function(event) {
                    ga('send', 'event',  'tudo-sobre-caes', slug($(this).text(), {lower: true}),  "fixo "+page+" "+dispositivo )
                });

                $(".sub-gatos").on("click", "a", function(event) {
                    ga('send', 'event', 'tudo-sobre-gatos', slug($(this).text(), {lower: true}), "fixo "+page+" "+dispositivo )
                });

                $("body").on("click", "[data-action]", function(event){
                    var action = $(this).data("action");
                    var category = $(this).data("category");
                    var label = $(this).data("label");
                    var value = $(this).data("value");
                    console.log("action "+action);
                    console.log("category "+category);
                    console.log("label "+label);
                    console.log("value "+value);

                    if(label != "" || label != "undefined"){
                        if(label==page){
                            ga('send', 'event', category, action, page+"-"+dispositivo )
                        }else{
                            ga('send', 'event', category, action, label+"-"+page+"-"+dispositivo )
                        }
                    }else if(value != "" || value != "undefined"){
                        if(value==page){
                            ga('send', 'event', category, action, +page+"-"+dispositivo )
                        }else{
                            ga('send', 'event', category, action, value+"-"+page+"-"+dispositivo )
                        }
                    }else{
                        ga('send', 'event', category, action, page+"-"+dispositivo )
                    }
                });

                $("body").on("click", "[data-action-dicas]", function(event){

                    var action = $(this).data("action-dicas");
                    var info = $(this).data("info");
                    var label = $(this).data("label");

                    if(label !== ""){
                        ga('send', 'event', action, info, label);
                    }else{
                        ga('send', 'event', action, info);
                    }
                });

                $(".footer-main").on("click", "a", function(event){
                    ga('send', 'event', 'rodape', slug($(this).text(), {lower: true}), "fixo "+page+"-"+dispositivo )
                });

                $("a[href='http://www.waltham.com']").on("click", function(event){
                    ga('send', 'event', 'acesse', 'link',  'conheca-waltham' )
                });

                $(".list_contact .text").on("click", "a", function(event){
                    ga('send', 'event', 'endereco', slug($(this).text(), {lower: true}), page+"-"+dispositivo )
                });
            }
        };
    main.init();
}());

var elMenuHamburuger = document.getElementById("iconMenuMobile");
var elSubMenuCaes = document.querySelectorAll(".nav-mobile")[0];
var header = {
    hamburguerMenu: function () {
        elMenuHamburuger.className.indexOf("open") === -1 ? elMenuHamburuger.className = "open" : elMenuHamburuger.classList.remove("open");
        elSubMenuCaes.className.indexOf("open") === -1 ? elSubMenuCaes.className += " open" : elSubMenuCaes.classList.remove("open");
    }
};

$(window).load(function(){
    var $grid = $('.grid').isotope({
        itemSelector: '.grid-item',
        masonry: {
            columnWidth: ".grid-sizer",
            horizontalOrder: true,
        }
    });

    $("body").on("click", ".filtro .label", function(){
        var itensFiltro = [];
        $(this).find('.checkbox').toggleClass("active");
        $(".filtro .label .active").each(function(index, el){
            itensFiltro.push("."+$(el).data('value'));
        });

        console.log(itensFiltro);

        $grid.isotope({ filter: itensFiltro.toString() })
    });

    $("body").on("click", ".clean-filter", function(){
        $(".filtro .checkbox").removeClass('active');
        $grid.isotope({ filter: '*' })
    });

    $(".filtro p").on('click', function(event){
        event.preventDefault();
        $('.filtro p').toggleClass("active");
        $('.label').toggleClass("inactive");
    });

    $grid.imagesLoaded().progress( function() {
        $grid.isotope('layout');
    });
});
